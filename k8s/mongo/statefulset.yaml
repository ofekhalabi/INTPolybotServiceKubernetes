apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  #The serviceName field creates a headless service (mongodb in this case), which is used for stable DNS names like mongodb-0.mongodb, mongodb-1.mongodb, etc. Each pod gets a unique DNS entry based on its name and StatefulSet name
  serviceName: "mongo"
  replicas: 3   # Number of MongoDB instances in the replica set
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      initContainers:
        - name: init-mongo
          image: mongo:5
          command: ["sh", "-c"]
          args:
            - >
              until mongo --host mongo-0.mongo:27017 --eval "rs.status()" | grep -q "no replset config has been received";
              do echo 'Waiting for MongoDB to be ready...' && sleep 5; done;
              echo 'Initializing replica set...';
              mongo --host mongo-0.mongo:27017 --eval "
              rs.initiate({
                _id: 'rs0',
                members: [
                  { _id: 0, host: 'mongo-0.mongo:27017' },
                  { _id: 1, host: 'mongo-1.mongo:27017' },
                  { _id: 2, host: 'mongo-2.mongo:27017' }
                ]
              })";
      containers:
        - name: mongo
          image: mongo:5
          command:
            - mongod
            - "--replSet"
            - "rs0"
            - "--bind_ip"
            - "0.0.0.0"
